play {
  modules.enabled += "pl.jozwik.demo.view.guice.GlobalModule"
  http {
    secret.key = "Eo^@S?I0do]BdhfDztxr[z5qzIQ>poMI2CUtBXK?JtaliEz[5/g[n3<58D88ffJ="
    secret.key = ${?APPLICATION_SECRET}
    session.cookieName = DEMO
    errorHandler = "pl.jozwik.demo.view.ErrorHandler"
    filters = pl.jozwik.demo.view.filters.Filters
  }
}


akka {

  loglevel = "DEBUG"
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  actor {
    debug {
      receive = on
      lifecycle = on
      log-config-on-start = on
      log-sent-messages = on
      log-received-messages = on
    }
  }

  fork-join-executor {
    # The parallelism factor is used to determine thread pool size using the
    # following formula: ceil(available processors * factor). Resulting size
    # is then bounded by the parallelism-min and parallelism-max values.
    parallelism-factor = 2.0

    # Min number of threads to cap factor-based parallelism number to
    parallelism-min = 8

    # Max number of threads to cap factor-based parallelism number to
    parallelism-max = 64
  }
  control-aware-dispatcher {
    mailbox-type = "akka.dispatch.UnboundedControlAwareMailbox"
  }

  simulator-dispatcher {
    # Dispatcher is the name of the event-based dispatcher
    type = Dispatcher
    # What kind of ExecutionService to use
    executor = "fork-join-executor"

    fork-join-executor {
      # Min number of threads to cap factor-based parallelism number to
      parallelism-min = 8
      # Parallelism (threads) ... ceil(available processors * factor)
      parallelism-factor = 8.0
      # Max number of threads to cap factor-based parallelism number to
      parallelism-max = 60
    }
  }

}




